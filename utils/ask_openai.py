import os
import time
import logging
from openai import (
    OpenAI,
    APIError,
    RateLimitError,
    AuthenticationError,
    APITimeoutError,
    APIConnectionError,
)

logger = logging.getLogger(__name__)
client = OpenAI(api_key=os.getenv("OPENAI_APIKEY"))

def ask_openai(prompt: str, system_prompt: str = "–¢—ã –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∏–ª–ª—é–∑–∏–æ–Ω–∏—Å—Ç–∞ –ê—Ä—Å–µ–Ω–∏—è. –û—Ç–≤–µ—á–∞–π –æ—Å–º—ã—Å–ª–µ–Ω–Ω–æ, –¥—Ä—É–∂–µ–ª—é–±–Ω–æ –∏ –∫—Ä–∞—Ç–∫–æ.", max_tokens: int = 150) -> str:
    try:
        start = time.time()
        response = client.chat.completions.create(
            model="gpt-3.5-turbo-0125",
            messages=[
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": prompt}
            ],
            temperature=0,
            max_tokens=max_tokens,
            timeout=20
        )
        end = time.time()
        answer = response.choices[0].message.content.strip()
        logger.info(f"[ask_openai] ‚úÖ –û—Ç–≤–µ—Ç: {answer}")
        logger.info(f"[ask_openai] üïí –í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {end - start:.2f} —Å–µ–∫")
        logger.info(f"[ask_openai] üìà –¢–æ–∫–µ–Ω–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {response.usage.total_tokens}")
        return answer

    except AuthenticationError as e:
        logger.error(f"[ask_openai] ‚ùå –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: {e}")
        return "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"

    except RateLimitError:
         logger.warning("[ask_openai] ‚ö†Ô∏è –õ–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤")
         return "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤"

    except (APITimeoutError, APIConnectionError):
        logger.warning("[ask_openai] ‚è∞ –¢–∞–π–º–∞—É—Ç / –Ω–µ—Ç —Å–≤—è–∑–∏")
        return "–¢–∞–π–º–∞—É—Ç"

    except APIError as e:
        logger.error(f"[ask_openai] ‚õî –û—à–∏–±–∫–∞ API: {e}")
        return "API –æ—à–∏–±–∫–∞"

    except Exception as e:
        logger.exception(f"[ask_openai] üí• –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"
