from utils.env_loader import ensure_env_loaded
ensure_env_loaded()
import os
import requests
from logger import logger
from utils.token_manager import check_token_validity

# –ë–µ—Ä—ë–º —Ç–æ–∫–µ–Ω –∏ chat_id –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

def send_telegram_alert(text):
    if not TELEGRAM_TOKEN or not TELEGRAM_CHAT_ID:
        logger.warning("‚ö†Ô∏è TELEGRAM_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID –Ω–µ –∑–∞–¥–∞–Ω—ã")
        return
    try:
        url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
        payload = {"chat_id": TELEGRAM_CHAT_ID, "text": text}
        resp = requests.post(url, json=payload, timeout=10)
        if resp.status_code == 200:
            logger.info("üì¢ Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        else:
            logger.warning(f"‚ùå –û—à–∏–±–∫–∞ Telegram: {resp.status_code} {resp.text}")
    except Exception as e:
        logger.error(f"üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ Telegram-—Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

already_alerted = False

def notify_if_token_invalid() -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å WA-—Ç–æ–∫–µ–Ω–∞ (utils.token_manager.check_token_validity).
    –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω ‚Äî —à–ª—ë—Ç –∞–ª–µ—Ä—Ç –≤ Telegram (–æ–¥–∏–Ω —Ä–∞–∑ –∑–∞ —Å–µ—Å—Å–∏—é).
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True/False –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –ø—Ä–æ–≤–µ—Ä–∫–∏.
    """
    global _already_alerted
    ok = check_token_validity()
    if ok:
        logger.info("‚úÖ –¢–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω")
        _already_alerted = False  # —Å–±—Ä–∞—Å—ã–≤–∞–µ–º, –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω —Å–Ω–æ–≤–∞ —Å—Ç–∞–ª –≤–∞–ª–∏–¥–µ–Ω
        return True
    logger.warning("‚ùå –¢–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω")
    if not _already_alerted:
        send_telegram_alert("‚ùóÔ∏è–¢–æ–∫–µ–Ω WhatsApp –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω. –ó–∞–π–¥–∏—Ç–µ –≤ –∞–¥–º–∏–Ω–∫—É –∏ –æ–±–Ω–æ–≤–∏—Ç–µ –µ–≥–æ.")
        _already_alerted = True
    return False