# utils/token_manager.py
from utils.env_loader import ensure_env_loaded
ensure_env_loaded()
import os, time, threading, requests
from logger import logger
from utils.supabase_token import load_token_from_supabase, save_token_to_supabase
from utils.env_flags import is_local_dev

LOCAL_DEV = is_local_dev()
_WHATSAPP_TOKEN: str | None = None

def init_token() -> None:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    global _WHATSAPP_TOKEN
    if LOCAL_DEV:
        _WHATSAPP_TOKEN = os.getenv("WHATSAPP_TOKEN", "")
        if _WHATSAPP_TOKEN:
            logger.info("üü¢ LOCAL_DEV=1: –±–µ—Ä—ë–º WHATSAPP_TOKEN –∏–∑ ENV")
        else:
            logger.critical("üí• LOCAL_DEV=1, –Ω–æ WHATSAPP_TOKEN –ø—É—Å—Ç")
    else:
        try:
            _WHATSAPP_TOKEN = load_token_from_supabase()
            logger.info(f"üîç WA —Ç–æ–∫–µ–Ω –∏–∑ Supabase: {_WHATSAPP_TOKEN[:8]}..., len={len(_WHATSAPP_TOKEN)}")
        except Exception as e:
            logger.error(f"‚ùå Supabase —Ç–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–∏–ª–∏: {e}")
            _WHATSAPP_TOKEN = os.getenv("WHATSAPP_TOKEN", "")
            if _WHATSAPP_TOKEN:
                logger.warning("‚ö†Ô∏è Fallback: WHATSAPP_TOKEN –∏–∑ ENV")
            else:
                logger.critical("üí• –ù–µ—Ç WA —Ç–æ–∫–µ–Ω–∞ –≤–æ–æ–±—â–µ")

def get_token() -> str:
    """–î–∞–π –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω (–ª–µ–Ω–∏–≤–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è)."""
    global _WHATSAPP_TOKEN
    if _WHATSAPP_TOKEN is None:
        init_token()
    return _WHATSAPP_TOKEN or ""

def set_token(new_token: str) -> None:
    """–û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –≤ –ø–∞–º—è—Ç–∏ (–ø–æ—Å–ª–µ —Ñ–æ—Ä–º—ã/–∞–¥–º–∏–Ω–∫–∏)."""
    global _WHATSAPP_TOKEN
    _WHATSAPP_TOKEN = new_token

def save_token(new_token: str) -> bool:
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ Supabase –∏ –æ–±–Ω–æ–≤–∏—Ç—å –≤ –ø–∞–º—è—Ç–∏ (–¥–ª—è –ø—Ä–æ–¥–∞)."""
    ok = save_token_to_supabase(new_token)
    if ok:
        set_token(new_token)
    return ok

def check_token_validity() -> bool:
    token = get_token()
    if not token:
        return False
    url = f"https://graph.facebook.com/v19.0/me?access_token={token}"
    try:
        r = requests.get(url, timeout=10)
        ok = (r.status_code == 200)
        if not ok:
            logger.warning(f"‚ùå WA —Ç–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω: {r.status_code} {r.text[:200]}")
        return ok
    except Exception as e:
        logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ WA —Ç–æ–∫–µ–Ω–∞: {e}")
        return False

def start_token_check_loop(interval_minutes: int = 30):
    def loop():
        while True:
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏, —à–ª—ë–º –∞–ª–µ—Ä—Ç –≤ TG
                from utils.telegram_alert import notify_if_token_invalid
                notify_if_token_invalid()
            except Exception as e:
                logger.warning(f"‚ö†Ô∏è token_check_loop: {e}")
            time.sleep(interval_minutes * 60)
    threading.Thread(target=loop, daemon=True).start()


